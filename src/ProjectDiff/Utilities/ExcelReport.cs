using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Threading.Tasks;
using OfficeOpenXml;
using OfficeOpenXml.Style;
using ProjectDiff.Entities;

namespace ProjectDiff.Utilities
{
    public class ExcelReport
    {
        public void createExcel<T>(string filename, List<T> excelDataList, string wsName="")
        {
            try
            {
                FileInfo newFile = new FileInfo(filename);
                Type listType = typeof(T);
                var columnsCount = listType.GetProperties().Length;
                using (ExcelPackage p = new ExcelPackage(newFile))
                {
                    p.Workbook.Properties.Author = "MSGD InfoSec Team";
                    p.Workbook.Properties.Title = "Autogenerated Sol Diff";
                    p.Workbook.Properties.Company = "Microsoft";
                    // p.Workbook.Properties.LastPrinted = DateTime.Now.ToString("dd MMM HH:mm:ss");
                    string workSheetName = "Results"; // +"-" + DateTime.Now.ToString("ddMMMyyyy-HHmmss");
                    p.Workbook.Worksheets.Add(workSheetName);
                    ExcelWorksheet ws = p.Workbook.Worksheets[workSheetName];
                    ws.Name = workSheetName;

                    int headerRowIndex = 1;
                    int headerColIndex = 1;

                    foreach (PropertyInfo propertyInfo in listType.GetProperties())
                    {
                        var cell = ws.Cells[headerRowIndex, headerColIndex];
                        cell.Style.Font.Bold = true;
                        var fill = cell.Style.Fill;
                        fill.PatternType = ExcelFillStyle.Solid;
                        fill.BackgroundColor.SetColor(Color.LightGray);

                        // Set the cell values
                        ws.Cells[headerRowIndex, headerColIndex].Value = propertyInfo.Name;
                        headerColIndex++;
                    }

                    int rowIndex = 2; // Row 1 is the header

                    foreach (var log in excelDataList)
                    {
                        var colIndex = 1;
                        foreach (PropertyInfo property in listType.GetProperties())
                        {
                            ws.Cells[rowIndex, colIndex].Value = property.GetValue(log);
                            colIndex++;
                        }
                        rowIndex++;
                    }
                    ws.DefaultColWidth = 10;
                    for (int i = 1, count = listType.GetProperties().Length; i <= count; i++)
                    {
                        ws.Column(i).AutoFit(10, 50);
                    }
                    p.Save();
                } // End using ExcelPackage
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
    }
}
